{"version":3,"sources":["api/api.js","components/Form.tsx","components/FormInput.tsx","components/Login.tsx","components/Register.tsx","App.tsx","index.tsx"],"names":["api","login","data","console","log","register","FormContext","createContext","Form","children","buttonTitle","initialState","sendData","useState","form","setForm","handleFormChange","useCallback","e","currentTarget","value","id","className","Provider","href","type","onClick","password","username","email","React","memo","FormInput","label","placeholder","isRequired","isVisibility","setVisibility","isPassword","formContext","useContext","htmlFor","onChange","required","Login","Register","App","isLogin","setLogin","CSSTransition","in","timeout","classNames","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f50a4b91.chunk.js","sourcesContent":["const api = {\n    login(data) {\n        console.log(data)\n    },\n    register(data) {\n        console.log(data)\n    },\n}\n\nexport default api;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { createContext, useCallback, useState } from \"react\"\nimport { IContextProps, IFormValue } from \"../interfaces\";\n\n\n\nexport const FormContext = createContext({} as IContextProps); \n\ninterface IFormProps {\n    children: JSX.Element | JSX.Element[];\n    buttonTitle: string;\n    initialState: IFormValue;\n    sendData: (data:IFormValue) => void;\n}\n\n\nconst Form: React.FC<IFormProps> = ({children, buttonTitle, initialState, sendData}: IFormProps): React.ReactElement => {\n\n    const [form, setForm] = useState<IFormValue>(initialState);\n    const handleFormChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n        const {value, id} = e.currentTarget; \n        setForm({...form, [id]: value})\n    }, [form])\n\n    const handleSendData = () => {\n        if(!form.password || !form.username || !form.email) {\n            return\n        }\n        sendData(form)\n    }\n    \n\n    return (\n        <div className=\"main-form\">\n        <FormContext.Provider value={{\n            form,\n            handleFormChange\n        }}>\n            {children}\n        </FormContext.Provider>\n        <div className=\"main-form__forgotps\">\n            <a href=\"#\">Forgot password?</a>\n        </div>\n        <div className=\"main-form__send\">\n            <button type=\"button\" onClick={handleSendData} className=\"btn btn-active btn-large\">{buttonTitle}</button>\n        </div>      \n        </div>\n    )\n}\n\nexport default React.memo(Form);","import React, { useState, useContext } from \"react\";\nimport { FormContext } from \"./Form\";\n\n\ninterface IFormInput {\n    type: string;\n    label: string;\n    id: string;\n    placeholder: string;\n    isRequired: boolean;\n}\n\n\nconst FormInput: React.FC<IFormInput> = ({type, label, id, placeholder, isRequired}:IFormInput) : React.ReactElement => {\n    const [isVisibility, setVisibility] = useState<boolean>(false);\n    const isPassword = type === \"password\"\n    const formContext = useContext(FormContext);\n    const { form, handleFormChange} = formContext;\n    \n    const handleChangeVisibility = () => {\n        setVisibility(!isVisibility);\n    }\n\n    return (\n    <div className=\"main-form__elem\">\n        <label htmlFor={id}>{label}</label>\n        <input className=\"custom-input\" onChange={handleFormChange} id={id} value={form[id]} type={isPassword ? isVisibility ? \"text\" : type : type} placeholder={placeholder} required={isRequired}/>\n        {type === \"password\" ?  <i className=\"btn-eye\"><span onClick={handleChangeVisibility} className=\"material-icons\">{isVisibility ? 'visibility': 'visibility_off'}</span></i> : null}\n      </div>\n    )\n}\n\nexport default FormInput;","import api from \"../api/api\";\nimport { IFormValue } from \"../interfaces\";\nimport Form from \"./Form\";\nimport FormInput from \"./FormInput\";\n\n\nconst Login = () => {\n\n    const sendData = (data:IFormValue) => {\n      api.login(data)\n    }\n\n    return (\n        <Form sendData={sendData} buttonTitle={\"Login\"} initialState={\n            {\n              username: '',\n              password: ''\n            }\n          }>\n              <FormInput label={\"User name\"} id={\"username\"} placeholder={\"Enter your User name\"} isRequired={true} type={'text'}/>\n              <FormInput label={\"Password\"} id={\"password\"} placeholder={\"Enter your Password\"} isRequired={true} type={'password'}/>\n          </Form>\n    );\n}\n\nexport default Login;","import api from \"../api/api\";\nimport { IFormValue } from \"../interfaces\";\nimport Form from \"./Form\";\nimport FormInput from \"./FormInput\";\n\n\nconst Register = () => {\n\n    const sendData = (data:IFormValue) => {\n      api.register(data)\n    }\n\n\n    return (\n        <Form sendData={sendData} buttonTitle={\"Register\"} initialState={\n            {\n              username: '',\n              password: '',\n              email: ''\n            }\n          }>\n              <FormInput label={\"User name\"} id={\"username\"} placeholder={\"Enter your User name\"} isRequired={true} type={'text'}/>\n              <FormInput label={\"Email\"} id={\"email\"} placeholder={\"Enter your Email\"} isRequired={true} type={'email'}/>\n              <FormInput label={\"Password\"} id={\"password\"} placeholder={\"Enter your Password\"} isRequired={true} type={'password'}/>\n          </Form>\n    );\n}\n\nexport default Register;","import { useState } from 'react';\nimport './App.css'\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction App() {\n  const [isLogin, setLogin] = useState<boolean>(true);\n  const handleSetLogin = () => {\n    setLogin(true)\n  }\n  const handleSetRegister = () => {\n    setLogin(false)\n  }\n  return (\n    <div className=\"wrapper\">\n    <div className=\"main\">\n      <div className=\"main__picture main__elem\">\n        <div className=\"main__picture__description\">\n          <h2 className=\"main-title\">Lorem ipsum is simply</h2>\n          <p className=\"main-text\">Lorem ipsum dolor simply</p>\n        </div>\n      </div>\n      <div className=\"main__manipulation main__elem\">\n          <div className=\"main__switch\">\n            <h3 className=\"main__switch_title\">Welcome to lorem..!</h3>\n            <div className=\"main-switch\">\n              <button onClick={handleSetLogin} className={`btn ${isLogin ? 'btn-active': ''}`}>Login</button>\n              <button onClick={handleSetRegister} className={`btn ${!isLogin ? 'btn-active': ''}`}>Register</button>\n            </div>\n          </div>\n          <div className=\"main__form\">\n              <div className=\"main__form__text_block\">\n                <p className=\"main__form__text\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n              </div>     \n              <CSSTransition \n                  in={isLogin}\n                  timeout={500}\n                  classNames=\"item\">                    \n              { isLogin ? <Login/> : <Register/> }    \n                </CSSTransition> \n          </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}